#
# Copyright (c) 2022-2024 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: Build-OpenWrt_Multi-Platform(V3)-test

on:
  repository_dispatch:
    types: [openwrt_source_update]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'false'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  MAKE_DEFCONFIG_SH: compile_script/step01_make_defconfig.sh
  GENERATE_RELEASE_TAG_SH: compile_script/step02_generate_release_tag.sh
  GENERATE_GIT_LOG_SH: compile_script/step03_generate_git_log.sh
  COPY_BACKGROUNDFILES_SH: compile_script/step04_copy_backgroundfiles.sh
  BUILD_STATUS_CHECKING_SH: compile_script/step05_build_status_checking.sh
  UPDATE_GIT_LOG_SH:  compile_script/step06_update_git_log.sh
  ORGANIZE_TAG_SH: compile_script/step07_organize_tag.sh


  PLATFORMS_SH: compile_script/platforms.sh

  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_ARTIFACT: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  job_init:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up matrix from platforms
        id: set-matrix
        run: |
          source platforms.sh
          # 构建JSON矩阵
          matrix_json="["

          for source_platform in "${source_code_platforms[@]}"; do
              # 根据 source_code_platforms 名称获取对应的变量名
              platforms_var="${source_platform}_platforms[@]"
              platforms=("${!platforms_var}")
          
              for platform in "${platforms[@]}"; do
                  matrix_json+="{\"source_code_platform\":\"${source_platform}\",\"platform\":\"${platform}\"},"
              done
          done
          
          # 移除最后一个多余的逗号
          matrix_json="${matrix_json%,}]"
          
          echo $matrix_json
  
          # 输出到 GITHUB_OUTPUT
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  build:
    needs: job_init
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.job_init.outputs.matrix) }}
    
    steps:
      - name: Echo matrix values
        run: |
          echo "Source Code Platform: ${{ matrix.source_code_platform }}"
          echo "Platform: ${{ matrix.platform }}"
          echo "REPO_URL: ${{ matrix.value.REPO_URL }}"   # 直接引用 REPO_URL
          echo "REPO_BRANCH: ${{ matrix.value.REPO_BRANCH }}"  # 可以引用其他的字段